<?php

/*
 * Copyright (C) 2015-2017 Libre Informatique
 *
 * This file is licenced under the GNU LGPL v3.
 * For the full copyright and license information, please view the LICENSE.md
 * file that was distributed with this source code.
 */

namespace Sil\Bundle\SonataSyliusUserBundle\Entity\Test\Unit;

use Sil\Bundle\SonataSyliusUserBundle\Entity\SonataGroup;
/*
 * Generated by PHPUnit_SkeletonGenerator on 2017-05-10 at 17:49:31.
 */
use PHPUnit\Framework\TestCase;

class SonataGroupTest extends TestCase
{
    /**
     * @var SonataGroup
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = new SonataGroup();
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }

    /**
     * @covers \Sil\Bundle\SonataSyliusUserBundle\Entity\SonataGroup::addRole
     *
     * @todo   Implement testAddRole().
     */
    public function testAddRole()
    {
        /**
         * @todo 1.appeler addRole
         * 2. appeler getRoles
         * 3. faire un assert pour vÃ©rifier que le role qu'on a passer a addRoles
         * est bien dans le resultat de getRoles
         */
        $role = 'foo';

        $this->object->addRole($role);

        $listRoles = $this->object->getRoles();

        // we search 'foo' in uppercase because addRoles transform a string in uppercase
        $this->assertContains('FOO', $listRoles);
    }

    /**
     * @covers \Sil\Bundle\SonataSyliusUserBundle\Entity\SonataGroup::removeRole
     *
     * @todo   Implement testRemoveRole().
     */
    public function testRemoveRole()
    {
        $role = 'foo';
        $role2 = 'bar';
        $role3 = 'zoo';

        $this->object->addRole($role);
        $this->object->addRole($role2);
        $this->object->addRole($role3);

        $listRoles = $this->object->getRoles();

        $this->object->removeRole($role2);
        //we call again getRoles() for refresh the array
        $listRoles = $this->object->getRoles();

        $this->assertNotContains('bar', $listRoles);
    }
}
